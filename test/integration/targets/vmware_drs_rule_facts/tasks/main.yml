# Test code for the vmware_drs_rule_facts module
# Copyright: (c) 2018, Abhijeet Kasurde <akasurde@redhat.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: make sure pyvmomi is installed
  pip:
    name: pyvmomi
    state: latest
  when: "{{ ansible_user_id == 'root' }}"

- name: store the vcenter container ip
  set_fact:
    vcsim: "{{ lookup('env', 'vcenter_host') }}"
- debug: var=vcsim

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 5000
    state: started

- name: kill vcsim
  uri:
    url: http://{{ vcsim }}:5000/killall
- name: start vcsim
  uri:
    url: http://{{ vcsim }}:5000/spawn?cluster=2
  register: vcsim_instance

- name: Wait for Flask controller to come up online
  wait_for:
    host: "{{ vcsim }}"
    port: 443
    state: started

- debug: var=vcsim_instance

- name: Gather facts about DRS rule from given cluster
  vmware_drs_rule_facts:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    cluster_name: DC0_C0
  register: drs_rule_0001_results

- debug: var=drs_rule_0001_results

- assert:
    that:
      - "drs_rule_0001_results.drs_rule_facts is defined"
      - "not drs_rule_0001_results.changed"

- name: Gather facts about DRS rule from given datacenter
  vmware_drs_rule_facts:
    validate_certs: False
    hostname: "{{ vcsim }}"
    username: "{{ vcsim_instance['json']['username'] }}"
    password: "{{ vcsim_instance['json']['password'] }}"
    datacenter: DC0
  register: drs_rule_0001_results

- debug: var=drs_rule_0001_results

- assert:
    that:
      - "drs_rule_0001_results.drs_rule_facts is defined"
      - "not drs_rule_0001_results.changed"
